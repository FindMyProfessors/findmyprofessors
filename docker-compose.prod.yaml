services:
  traefik:
    image: traefik:v2.9
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.cloudflare.acme.dnschallenge=true"
      - "--certificatesresolvers.cloudflare.acme.dnschallenge.provider=cloudflare"
      - "--certificatesresolvers.cloudflare.acme.email=contact@warrensnipse.dev"
      - "--certificatesresolvers.cloudflare.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    env_file: .cloudflare
    restart: always

  db:
    image: "postgres:16.3"
    restart: always
    command: ["postgres", "-c", "log_statement=all"]
    environment:
      POSTGRES_DB: findmyprofessors_api_development
      POSTGRES_USER: api
      POSTGRES_PASSWORD: test
    volumes:
      - .server/postgres-data:/var/lib/postgresql/data
      - .server/postgres-logs:/logs:z
      - ./scripts/init-database.sh:/docker-entrypoint-initdb.d/init-database.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10

  api:
    restart: always
    build:
      context: ./api
      dockerfile: Dockerfile
    #ports:
    #  - 8080:8080
    env_file:
      - .prod.env
    depends_on:
      - db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`findmyprofessors-api.warrensnipes.dev`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=cloudflare"

  web:
    restart: always
    build:
      context: ./web
      dockerfile: Dockerfile
    env_file:
      - .prod.env
    depends_on:
      - db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`findmyprofessors.warrensnipes.dev`)"
      - "traefik.http.routers.web.entrypoints=websecure"
      - "traefik.http.routers.web.tls.certresolver=cloudflare"

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    depends_on:
      - db
    #ports:
    #  - "8888:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: joemama@joemama.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin:/var/lib/pgadmin
      - ./scripts/servers.json:/pgadmin4/servers.json

volumes:
  letsencrypt:
  pgadmin:
