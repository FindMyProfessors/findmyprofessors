/*
api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ProfessorSearchResultEdgesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProfessorSearchResultEdgesInner{}

// ProfessorSearchResultEdgesInner struct for ProfessorSearchResultEdgesInner
type ProfessorSearchResultEdgesInner struct {
	Node   DefaultSelectionPrisma36ProfessorPayload `json:"node"`
	Cursor string                                   `json:"cursor"`
}

type _ProfessorSearchResultEdgesInner ProfessorSearchResultEdgesInner

// NewProfessorSearchResultEdgesInner instantiates a new ProfessorSearchResultEdgesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProfessorSearchResultEdgesInner(node DefaultSelectionPrisma36ProfessorPayload, cursor string) *ProfessorSearchResultEdgesInner {
	this := ProfessorSearchResultEdgesInner{}
	this.Node = node
	this.Cursor = cursor
	return &this
}

// NewProfessorSearchResultEdgesInnerWithDefaults instantiates a new ProfessorSearchResultEdgesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProfessorSearchResultEdgesInnerWithDefaults() *ProfessorSearchResultEdgesInner {
	this := ProfessorSearchResultEdgesInner{}
	return &this
}

// GetNode returns the Node field value
func (o *ProfessorSearchResultEdgesInner) GetNode() DefaultSelectionPrisma36ProfessorPayload {
	if o == nil {
		var ret DefaultSelectionPrisma36ProfessorPayload
		return ret
	}

	return o.Node
}

// GetNodeOk returns a tuple with the Node field value
// and a boolean to check if the value has been set.
func (o *ProfessorSearchResultEdgesInner) GetNodeOk() (*DefaultSelectionPrisma36ProfessorPayload, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Node, true
}

// SetNode sets field value
func (o *ProfessorSearchResultEdgesInner) SetNode(v DefaultSelectionPrisma36ProfessorPayload) {
	o.Node = v
}

// GetCursor returns the Cursor field value
func (o *ProfessorSearchResultEdgesInner) GetCursor() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Cursor
}

// GetCursorOk returns a tuple with the Cursor field value
// and a boolean to check if the value has been set.
func (o *ProfessorSearchResultEdgesInner) GetCursorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cursor, true
}

// SetCursor sets field value
func (o *ProfessorSearchResultEdgesInner) SetCursor(v string) {
	o.Cursor = v
}

func (o ProfessorSearchResultEdgesInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProfessorSearchResultEdgesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["node"] = o.Node
	toSerialize["cursor"] = o.Cursor
	return toSerialize, nil
}

func (o *ProfessorSearchResultEdgesInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"node",
		"cursor",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProfessorSearchResultEdgesInner := _ProfessorSearchResultEdgesInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varProfessorSearchResultEdgesInner)

	if err != nil {
		return err
	}

	*o = ProfessorSearchResultEdgesInner(varProfessorSearchResultEdgesInner)

	return err
}

type NullableProfessorSearchResultEdgesInner struct {
	value *ProfessorSearchResultEdgesInner
	isSet bool
}

func (v NullableProfessorSearchResultEdgesInner) Get() *ProfessorSearchResultEdgesInner {
	return v.value
}

func (v *NullableProfessorSearchResultEdgesInner) Set(val *ProfessorSearchResultEdgesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableProfessorSearchResultEdgesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableProfessorSearchResultEdgesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProfessorSearchResultEdgesInner(val *ProfessorSearchResultEdgesInner) *NullableProfessorSearchResultEdgesInner {
	return &NullableProfessorSearchResultEdgesInner{value: val, isSet: true}
}

func (v NullableProfessorSearchResultEdgesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProfessorSearchResultEdgesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
