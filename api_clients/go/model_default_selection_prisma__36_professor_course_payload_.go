/*
api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the DefaultSelectionPrismaProfessorCoursePayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DefaultSelectionPrismaProfessorCoursePayload{}

// DefaultSelectionPrismaProfessorCoursePayload struct for DefaultSelectionPrismaProfessorCoursePayload
type DefaultSelectionPrismaProfessorCoursePayload struct {
	Semester    Mol36EnumsSemester `json:"semester"`
	Year        int32              `json:"year"`
	CourseId    int32              `json:"course_id"`
	ProfessorId int32              `json:"professor_id"`
	Id          int32              `json:"id"`
}

type _DefaultSelectionPrismaProfessorCoursePayload DefaultSelectionPrismaProfessorCoursePayload

// NewDefaultSelectionPrismaProfessorCoursePayload instantiates a new DefaultSelectionPrismaProfessorCoursePayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDefaultSelectionPrismaProfessorCoursePayload(semester ModelEnumsSemester, year int32, courseId int32, professorId int32, id int32) *DefaultSelectionPrismaProfessorCoursePayload {
	this := DefaultSelectionPrismaProfessorCoursePayload{}
	this.Semester = semester
	this.Year = year
	this.CourseId = courseId
	this.ProfessorId = professorId
	this.Id = id
	return &this
}

// NewDefaultSelectionPrismaProfessorCoursePayloadWithDefaults instantiates a new DefaultSelectionPrismaProfessorCoursePayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDefaultSelectionPrismaProfessorCoursePayloadWithDefaults() *DefaultSelectionPrismaProfessorCoursePayload {
	this := DefaultSelectionPrismaProfessorCoursePayload{}
	return &this
}

// GetSemester returns the Semester field value
func (o *DefaultSelectionPrismaProfessorCoursePayload) GetSemester() ModelEnumsSemester {
	if o == nil {
		var ret ModelEnumsSemester
		return ret
	}

	return o.Semester
}

// GetSemesterOk returns a tuple with the Semester field value
// and a boolean to check if the value has been set.
func (o *DefaultSelectionPrismaProfessorCoursePayload) GetSemesterOk() (*ModelEnumsSemester, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Semester, true
}

// SetSemester sets field value
func (o *DefaultSelectionPrismaProfessorCoursePayload) SetSemester(v ModelEnumsSemester) {
	o.Semester = v
}

// GetYear returns the Year field value
func (o *DefaultSelectionPrismaProfessorCoursePayload) GetYear() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Year
}

// GetYearOk returns a tuple with the Year field value
// and a boolean to check if the value has been set.
func (o *DefaultSelectionPrismaProfessorCoursePayload) GetYearOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Year, true
}

// SetYear sets field value
func (o *DefaultSelectionPrismaProfessorCoursePayload) SetYear(v int32) {
	o.Year = v
}

// GetCourseId returns the CourseId field value
func (o *DefaultSelectionPrismaProfessorCoursePayload) GetCourseId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CourseId
}

// GetCourseIdOk returns a tuple with the CourseId field value
// and a boolean to check if the value has been set.
func (o *DefaultSelectionPrismaProfessorCoursePayload) GetCourseIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CourseId, true
}

// SetCourseId sets field value
func (o *DefaultSelectionPrismaProfessorCoursePayload) SetCourseId(v int32) {
	o.CourseId = v
}

// GetProfessorId returns the ProfessorId field value
func (o *DefaultSelectionPrismaProfessorCoursePayload) GetProfessorId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ProfessorId
}

// GetProfessorIdOk returns a tuple with the ProfessorId field value
// and a boolean to check if the value has been set.
func (o *DefaultSelectionPrismaProfessorCoursePayload) GetProfessorIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProfessorId, true
}

// SetProfessorId sets field value
func (o *DefaultSelectionPrismaProfessorCoursePayload) SetProfessorId(v int32) {
	o.ProfessorId = v
}

// GetId returns the Id field value
func (o *DefaultSelectionPrismaProfessorCoursePayload) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *DefaultSelectionPrismaProfessorCoursePayload) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *DefaultSelectionPrismaProfessorCoursePayload) SetId(v int32) {
	o.Id = v
}

func (o DefaultSelectionPrismaProfessorCoursePayload) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DefaultSelectionPrismaProfessorCoursePayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["semester"] = o.Semester
	toSerialize["year"] = o.Year
	toSerialize["course_id"] = o.CourseId
	toSerialize["professor_id"] = o.ProfessorId
	toSerialize["id"] = o.Id
	return toSerialize, nil
}

func (o *DefaultSelectionPrismaProfessorCoursePayload) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"semester",
		"year",
		"course_id",
		"professor_id",
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDefaultSelectionPrismaProfessorCoursePayload := _DefaultSelectionPrismaProfessorCoursePayload{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDefaultSelectionPrismaProfessorCoursePayload)

	if err != nil {
		return err
	}

	*o = DefaultSelectionPrismaProfessorCoursePayload(varDefaultSelectionPrismaProfessorCoursePayload)

	return err
}

type NullableDefaultSelectionPrismaProfessorCoursePayload struct {
	value *DefaultSelectionPrismaProfessorCoursePayload
	isSet bool
}

func (v NullableDefaultSelectionPrismaProfessorCoursePayload) Get() *DefaultSelectionPrismaProfessorCoursePayload {
	return v.value
}

func (v *NullableDefaultSelectionPrismaProfessorCoursePayload) Set(val *DefaultSelectionPrismaProfessorCoursePayload) {
	v.value = val
	v.isSet = true
}

func (v NullableDefaultSelectionPrismaProfessorCoursePayload) IsSet() bool {
	return v.isSet
}

func (v *NullableDefaultSelectionPrismaProfessorCoursePayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDefaultSelectionPrismaProfessorCoursePayload(val *DefaultSelectionPrismaProfessorCoursePayload) *NullableDefaultSelectionPrismaProfessorCoursePayload {
	return &NullableDefaultSelectionPrismaProfessorCoursePayload{value: val, isSet: true}
}

func (v NullableDefaultSelectionPrismaProfessorCoursePayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDefaultSelectionPrismaProfessorCoursePayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
