/*
api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SchoolSearchResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SchoolSearchResult{}

// SchoolSearchResult struct for SchoolSearchResult
type SchoolSearchResult struct {
	PageInfo SchoolSearchResultPageInfo     `json:"pageInfo"`
	Edges    []SchoolSearchResultEdgesInner `json:"edges"`
}

type _SchoolSearchResult SchoolSearchResult

// NewSchoolSearchResult instantiates a new SchoolSearchResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSchoolSearchResult(pageInfo SchoolSearchResultPageInfo, edges []SchoolSearchResultEdgesInner) *SchoolSearchResult {
	this := SchoolSearchResult{}
	this.PageInfo = pageInfo
	this.Edges = edges
	return &this
}

// NewSchoolSearchResultWithDefaults instantiates a new SchoolSearchResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSchoolSearchResultWithDefaults() *SchoolSearchResult {
	this := SchoolSearchResult{}
	return &this
}

// GetPageInfo returns the PageInfo field value
func (o *SchoolSearchResult) GetPageInfo() SchoolSearchResultPageInfo {
	if o == nil {
		var ret SchoolSearchResultPageInfo
		return ret
	}

	return o.PageInfo
}

// GetPageInfoOk returns a tuple with the PageInfo field value
// and a boolean to check if the value has been set.
func (o *SchoolSearchResult) GetPageInfoOk() (*SchoolSearchResultPageInfo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PageInfo, true
}

// SetPageInfo sets field value
func (o *SchoolSearchResult) SetPageInfo(v SchoolSearchResultPageInfo) {
	o.PageInfo = v
}

// GetEdges returns the Edges field value
func (o *SchoolSearchResult) GetEdges() []SchoolSearchResultEdgesInner {
	if o == nil {
		var ret []SchoolSearchResultEdgesInner
		return ret
	}

	return o.Edges
}

// GetEdgesOk returns a tuple with the Edges field value
// and a boolean to check if the value has been set.
func (o *SchoolSearchResult) GetEdgesOk() ([]SchoolSearchResultEdgesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Edges, true
}

// SetEdges sets field value
func (o *SchoolSearchResult) SetEdges(v []SchoolSearchResultEdgesInner) {
	o.Edges = v
}

func (o SchoolSearchResult) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SchoolSearchResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pageInfo"] = o.PageInfo
	toSerialize["edges"] = o.Edges
	return toSerialize, nil
}

func (o *SchoolSearchResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pageInfo",
		"edges",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSchoolSearchResult := _SchoolSearchResult{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSchoolSearchResult)

	if err != nil {
		return err
	}

	*o = SchoolSearchResult(varSchoolSearchResult)

	return err
}

type NullableSchoolSearchResult struct {
	value *SchoolSearchResult
	isSet bool
}

func (v NullableSchoolSearchResult) Get() *SchoolSearchResult {
	return v.value
}

func (v *NullableSchoolSearchResult) Set(val *SchoolSearchResult) {
	v.value = val
	v.isSet = true
}

func (v NullableSchoolSearchResult) IsSet() bool {
	return v.isSet
}

func (v *NullableSchoolSearchResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSchoolSearchResult(val *SchoolSearchResult) *NullableSchoolSearchResult {
	return &NullableSchoolSearchResult{value: val, isSet: true}
}

func (v NullableSchoolSearchResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSchoolSearchResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
