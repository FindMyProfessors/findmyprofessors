/*
api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the PickUserExcludeKeyofUserPassword type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PickUserExcludeKeyofUserPassword{}

// PickUserExcludeKeyofUserPassword From T, pick a set of properties whose keys are in the union K
type PickUserExcludeKeyofUserPassword struct {
	Id              int32                `json:"id"`
	Email           string               `json:"email"`
	Username        string               `json:"username"`
	SignupTime      time.Time            `json:"signup_time"`
	LastLoginTime   time.Time            `json:"last_login_time"`
	AccountVerified bool                 `json:"account_verified"`
	Role            Model36EnumsUserRole `json:"role"`
}

type _PickUserExcludeKeyofUserPassword PickUserExcludeKeyofUserPassword

// NewPickUserExcludeKeyofUserPassword instantiates a new PickUserExcludeKeyofUserPassword object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPickUserExcludeKeyofUserPassword(id int32, email string, username string, signupTime time.Time, lastLoginTime time.Time, accountVerified bool, role ModelEnumsUserRole) *PickUserExcludeKeyofUserPassword {
	this := PickUserExcludeKeyofUserPassword{}
	this.Id = id
	this.Email = email
	this.Username = username
	this.SignupTime = signupTime
	this.LastLoginTime = lastLoginTime
	this.AccountVerified = accountVerified
	this.Role = role
	return &this
}

// NewPickUserExcludeKeyofUserPasswordWithDefaults instantiates a new PickUserExcludeKeyofUserPassword object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPickUserExcludeKeyofUserPasswordWithDefaults() *PickUserExcludeKeyofUserPassword {
	this := PickUserExcludeKeyofUserPassword{}
	return &this
}

// GetId returns the Id field value
func (o *PickUserExcludeKeyofUserPassword) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PickUserExcludeKeyofUserPassword) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PickUserExcludeKeyofUserPassword) SetId(v int32) {
	o.Id = v
}

// GetEmail returns the Email field value
func (o *PickUserExcludeKeyofUserPassword) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *PickUserExcludeKeyofUserPassword) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *PickUserExcludeKeyofUserPassword) SetEmail(v string) {
	o.Email = v
}

// GetUsername returns the Username field value
func (o *PickUserExcludeKeyofUserPassword) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *PickUserExcludeKeyofUserPassword) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *PickUserExcludeKeyofUserPassword) SetUsername(v string) {
	o.Username = v
}

// GetSignupTime returns the SignupTime field value
func (o *PickUserExcludeKeyofUserPassword) GetSignupTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.SignupTime
}

// GetSignupTimeOk returns a tuple with the SignupTime field value
// and a boolean to check if the value has been set.
func (o *PickUserExcludeKeyofUserPassword) GetSignupTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SignupTime, true
}

// SetSignupTime sets field value
func (o *PickUserExcludeKeyofUserPassword) SetSignupTime(v time.Time) {
	o.SignupTime = v
}

// GetLastLoginTime returns the LastLoginTime field value
func (o *PickUserExcludeKeyofUserPassword) GetLastLoginTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.LastLoginTime
}

// GetLastLoginTimeOk returns a tuple with the LastLoginTime field value
// and a boolean to check if the value has been set.
func (o *PickUserExcludeKeyofUserPassword) GetLastLoginTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastLoginTime, true
}

// SetLastLoginTime sets field value
func (o *PickUserExcludeKeyofUserPassword) SetLastLoginTime(v time.Time) {
	o.LastLoginTime = v
}

// GetAccountVerified returns the AccountVerified field value
func (o *PickUserExcludeKeyofUserPassword) GetAccountVerified() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AccountVerified
}

// GetAccountVerifiedOk returns a tuple with the AccountVerified field value
// and a boolean to check if the value has been set.
func (o *PickUserExcludeKeyofUserPassword) GetAccountVerifiedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountVerified, true
}

// SetAccountVerified sets field value
func (o *PickUserExcludeKeyofUserPassword) SetAccountVerified(v bool) {
	o.AccountVerified = v
}

// GetRole returns the Role field value
func (o *PickUserExcludeKeyofUserPassword) GetRole() ModelEnumsUserRole {
	if o == nil {
		var ret ModelEnumsUserRole
		return ret
	}

	return o.Role
}

// GetRoleOk returns a tuple with the Role field value
// and a boolean to check if the value has been set.
func (o *PickUserExcludeKeyofUserPassword) GetRoleOk() (*ModelEnumsUserRole, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Role, true
}

// SetRole sets field value
func (o *PickUserExcludeKeyofUserPassword) SetRole(v ModelEnumsUserRole) {
	o.Role = v
}

func (o PickUserExcludeKeyofUserPassword) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PickUserExcludeKeyofUserPassword) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["email"] = o.Email
	toSerialize["username"] = o.Username
	toSerialize["signup_time"] = o.SignupTime
	toSerialize["last_login_time"] = o.LastLoginTime
	toSerialize["account_verified"] = o.AccountVerified
	toSerialize["role"] = o.Role
	return toSerialize, nil
}

func (o *PickUserExcludeKeyofUserPassword) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"email",
		"username",
		"signup_time",
		"last_login_time",
		"account_verified",
		"role",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPickUserExcludeKeyofUserPassword := _PickUserExcludeKeyofUserPassword{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPickUserExcludeKeyofUserPassword)

	if err != nil {
		return err
	}

	*o = PickUserExcludeKeyofUserPassword(varPickUserExcludeKeyofUserPassword)

	return err
}

type NullablePickUserExcludeKeyofUserPassword struct {
	value *PickUserExcludeKeyofUserPassword
	isSet bool
}

func (v NullablePickUserExcludeKeyofUserPassword) Get() *PickUserExcludeKeyofUserPassword {
	return v.value
}

func (v *NullablePickUserExcludeKeyofUserPassword) Set(val *PickUserExcludeKeyofUserPassword) {
	v.value = val
	v.isSet = true
}

func (v NullablePickUserExcludeKeyofUserPassword) IsSet() bool {
	return v.isSet
}

func (v *NullablePickUserExcludeKeyofUserPassword) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePickUserExcludeKeyofUserPassword(val *PickUserExcludeKeyofUserPassword) *NullablePickUserExcludeKeyofUserPassword {
	return &NullablePickUserExcludeKeyofUserPassword{value: val, isSet: true}
}

func (v NullablePickUserExcludeKeyofUserPassword) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePickUserExcludeKeyofUserPassword) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
